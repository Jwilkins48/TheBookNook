@using Humanizer
@model BookIndexViewModel
@{
    ViewData["Title"] = "Book Gallery";
    var books = Model;
}
<div class="d-flex justify-content-between align-items-center">
    <h1>All Books</h1>

    <div class="dropdown p-1 rounded shadow"">
        <button class=" dropbtn">Filter Genre</button>
        <div class="dropdown-content">
            <a href="/books">All Books</a>
            <a href="/books?genre=fantasy">Fantasy</a>
            <a href="/books?genre=sci-Fi">Sci-Fi</a>
            <a href="/books?genre=fiction">Fiction</a>
            <a href="/books?genre=nonfiction">NonFiction</a>
            <a href="/books?genre=horror">Horror</a>
        </div>
    </div>
</div>

@foreach (var book in books.AllBooks)
{
    <div class="border-success shadow card mb-3 p-3">
        @book.BookTitle -
        @book.Author -
        @book.Genre -
        @book.PublishedYear -
        @book.CreatedAt.Humanize()

        <div class="d-flex align-items-center">
            <div><a class="text-success-emphasis btn" href="books/@book.Id">View</a></div>
            @if (Context.Session.GetInt32("userId") == book.UserId)
            {
                <p class="mb-0"> <a class="btn text-warning-emphasis" href="/books/@book.Id/edit">Edit</a> </p>

                <p class="mb-0"> <a class="btn text-danger-emphasis" href="/books/@book.Id/delete">Delete</a></p>
            }
        </div>
    </div>

}